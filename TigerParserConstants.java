/* Generated By:JavaCC: Do not edit this line. TigerParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface TigerParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ARRAY = 10;
  /** RegularExpression Id. */
  int BREAK = 11;
  /** RegularExpression Id. */
  int DO = 12;
  /** RegularExpression Id. */
  int ELSE = 13;
  /** RegularExpression Id. */
  int END = 14;
  /** RegularExpression Id. */
  int FOR = 15;
  /** RegularExpression Id. */
  int FUNCTION = 16;
  /** RegularExpression Id. */
  int IF = 17;
  /** RegularExpression Id. */
  int IN = 18;
  /** RegularExpression Id. */
  int LET = 19;
  /** RegularExpression Id. */
  int NIL = 20;
  /** RegularExpression Id. */
  int OF = 21;
  /** RegularExpression Id. */
  int THEN = 22;
  /** RegularExpression Id. */
  int TO = 23;
  /** RegularExpression Id. */
  int TYPE = 24;
  /** RegularExpression Id. */
  int VAR = 25;
  /** RegularExpression Id. */
  int WHILE = 26;
  /** RegularExpression Id. */
  int PLUS_SIGN = 27;
  /** RegularExpression Id. */
  int MINUS_SIGN = 28;
  /** RegularExpression Id. */
  int MULT_SIGN = 29;
  /** RegularExpression Id. */
  int DIV = 30;
  /** RegularExpression Id. */
  int AND = 31;
  /** RegularExpression Id. */
  int OR = 32;
  /** RegularExpression Id. */
  int EQUALS = 33;
  /** RegularExpression Id. */
  int NEQ = 34;
  /** RegularExpression Id. */
  int LT = 35;
  /** RegularExpression Id. */
  int LTE = 36;
  /** RegularExpression Id. */
  int GT = 37;
  /** RegularExpression Id. */
  int GTE = 38;
  /** RegularExpression Id. */
  int ASSIGN = 39;
  /** RegularExpression Id. */
  int SEMIC = 40;
  /** RegularExpression Id. */
  int COMMA = 41;
  /** RegularExpression Id. */
  int COLON = 42;
  /** RegularExpression Id. */
  int DOT = 43;
  /** RegularExpression Id. */
  int LBR = 44;
  /** RegularExpression Id. */
  int RBR = 45;
  /** RegularExpression Id. */
  int LSQB = 46;
  /** RegularExpression Id. */
  int RSQB = 47;
  /** RegularExpression Id. */
  int LCURLB = 48;
  /** RegularExpression Id. */
  int RCURLB = 49;
  /** RegularExpression Id. */
  int IDENTIFIER = 50;
  /** RegularExpression Id. */
  int INTEGER = 51;
  /** RegularExpression Id. */
  int LETTER = 52;
  /** RegularExpression Id. */
  int DIGIT = 53;
  /** RegularExpression Id. */
  int STRING = 55;
  /** RegularExpression Id. */
  int OTHER = 59;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_COMMENT = 1;
  /** Lexical state. */
  int WITHIN_STRING = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"/*\"",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 9>",
    "\"array\"",
    "\"break\"",
    "\"do\"",
    "\"else\"",
    "\"end\"",
    "\"for\"",
    "\"function\"",
    "\"if\"",
    "\"in\"",
    "\"let\"",
    "\"nil\"",
    "\"of\"",
    "\"then\"",
    "\"to\"",
    "\"type\"",
    "\"var\"",
    "\"while\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&\"",
    "\"|\"",
    "\"=\"",
    "\"<>\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\":=\"",
    "\";\"",
    "\",\"",
    "\":\"",
    "\".\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "<IDENTIFIER>",
    "<INTEGER>",
    "<LETTER>",
    "<DIGIT>",
    "\"\\\"\"",
    "\"\\\"\"",
    "<token of kind 56>",
    "<token of kind 57>",
    "<token of kind 58>",
    "<OTHER>",
  };

}
